# Name of your application. Used to uniquely configure containers.
service: substore

# Name of the container image.
image: jalen0x/substore

# Deploy to these servers.
servers:
  web:
    - 120.26.229.237
  # job:
  #   hosts:
  #     - 120.26.229.237
  #   cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: sub-store.jalenx.me
  app_port: 3001
  healthcheck:
    path: /
    interval: 5
    timeout: 3

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: ghcr.io / registry.digitalocean.com / ...
  username: jalen0x

  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64
  dockerfile: Dockerfile
  # Pass in additional build args needed for your Dockerfile.
  # args:
  #   SOME_ARG: some-value

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  clear:
    TZ: Asia/Shanghai
  secret:
    - SUB_STORE_FRONTEND_BACKEND_PATH
    - KAMAL_REGISTRY_PASSWORD

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal app logs -r job" will tail logs from the first server in the job section.
aliases:
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
volumes:
  - "substore_data:/opt/app/data"
